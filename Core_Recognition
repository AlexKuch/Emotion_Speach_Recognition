import tensorflow as tf

x = x_dict['images']

conv1 = tf.layers.conv2d(x, 32, 5, activation = tf.nn.relu)
conv1 = tf.layers.max_pooling2d(conv1, 2, 2)
conv2 = tf.layers.conv2d(conv1, 64, 3, activation = tf.nn.relu)
conv2 = tf.layers.max_pooling2d(conv2, 2, 2)

fc1 = tf.contrib.layers.flatten(conv2)
fc1 = tf.layers.dence(fc1, 1024)

out = tf.layers.dence(fc1, n_classes)

with tf.variable_scope('ConvNet', reuse = reuse):
    x = x_dict['images']
    x = tf.reshape(x, shape=[-1, shape[0], shape[1], 3])
    conv1 = tf.layers.conv2d(x, 32, 5, activation = tf.nn.relu )
    conv1 = tf.max_pooling2d(conv1, 2, 2)
    conv2 = tf.layers.conv2d(conv1, 64, 3, activation = tf.nn.relu)
    conv2 = tf.max_pooling2d(conv2, 2, 2)
    fc1 = tf.contrib.layers.flatten(conv2)
    fc1 = tf.layers.dence(fc1, 1024)
    fc1 = tf.layers.dropout(fc1, rate = dropout, training = is_training)
    out = tf.layers.dence(fc1, n_classes)

logits_train = conv_net(features, num_classes, dropout, reuse = False, is_training = True)

logits_test = conv_net(features, num_classes, dropout, reuse = False, is_training = True)
